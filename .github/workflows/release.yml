name: Release & Publish

on:
  push:
    tags:
      - "v*"

jobs:
  publish_pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/torrra
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Install uv and setup the python version
        uses: astral-sh/setup-uv@v5

      - name: Install the project
        run: uv sync --all-groups

      - name: Build wheel
        run: uv build

      - name: Publish package
        run: uv publish

  build_and_attach_binaries:
    name: Build & Attach ${{ matrix.os }} Binary
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pyinstaller

      - name: Build standalone binary
        run: pyinstaller torrra.spec

      - name: Rename binary by platform
        shell: bash
        run: |
          mkdir -p dist-out
          ARCH=$(uname -m)

          if [[ "$RUNNER_OS" == "Linux" ]]; then
            cp dist/torrra "dist-out/torrra-${GITHUB_REF_NAME}-linux-${ARCH}"
          elif [[ "$RUNNER_OS" == "Windows" ]]; then
            cp dist/torrra.exe "dist-out/torrra-${GITHUB_REF_NAME}-windows-${ARCH}.exe"
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            cp dist/torrra "dist-out/torrra-${GITHUB_REF_NAME}-macos-${ARCH}"
          fi

      - name: Upload binary to release
        uses: softprops/action-gh-release@v2
        with:
          files: dist-out/*
          token: ${{ secrets.GITHUB_TOKEN }}

  aur_torrra_source:
    name: Update AUR torrra (Source)
    needs: publish_pypi
    runs-on: ubuntu-latest
    environment:
      name: aur
      url: https://aur.archlinux.org/packages/torrra
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set env vars
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}

      - name: Add AUR to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan aur.archlinux.org >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Update & Push torrra (source)
        run: |
          git clone ssh://aur@aur.archlinux.org/torrra.git
          cd torrra

          sed -i "s/^pkgver=.*/pkgver=${{ env.VERSION }}/" PKGBUILD
          sed -i "s/^pkgrel=.*/pkgrel=1/" PKGBUILD
          updpkgsums
          makepkg --printsrcinfo > .SRCINFO

          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add PKGBUILD .SRCINFO
          git diff --staged --quiet || git commit -m "chore: release v${{ env.VERSION }}"
          git push

  aur_torrra_bin:
    name: Update AUR torrra-bin (Binary)
    needs: build_and_attach_binaries
    runs-on: ubuntu-latest
    environment:
      name: aur
      url: https://aur.archlinux.org/packages/torrra-bin
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set env vars
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}

      - name: Add AUR to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan aur.archlinux.org >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Update & Push torrra-bin (binary)
        run: |
          git clone ssh://aur@aur.archlinux.org/torrra-bin.git
          cd torrra-bin

          sed -i "s/^pkgver=.*/pkgver=${{ env.VERSION }}/" PKGBUILD
          sed -i "s/^pkgrel=.*/pkgrel=1/" PKGBUILD
          updpkgsums
          makepkg --printsrcinfo > .SRCINFO

          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add PKGBUILD .SRCINFO
          git diff --staged --quiet || git commit -m "chore: release v${{ env.VERSION }}"
          git push

  publish_docker:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    environment:
      name: docker
      url: https://hub.docker.com/r/stabldev/torrra
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set env vars
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ vars.DOCKERHUB_USERNAME }}/torrra:latest
            ${{ vars.DOCKERHUB_USERNAME }}/torrra:${{ env.VERSION }}
